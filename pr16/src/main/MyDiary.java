package main;

import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;
import java.time.DateTimeException;


public class MyDiary {


    public static void addNotate() {
        while (true) {
            System.out.println("–í–≤–µ–¥—ñ—Ç—å –≤–ª–∞—Å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç–∏ —Ç–∞ —á–∞—Å—É üôè : ");
            String usFormat = Const.s.nextLine();

            try {
                Const.fr = DateTimeFormatter.ofPattern(usFormat);
                System.out.println("–í–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É —ñ —á–∞—Å —É –≤–≤–µ–¥–µ–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ, –∞–±–æ –ø–æ—Ä–æ–∂–Ω—ñ–π —Ä—è–¥–æ–∫ –¥–ª—è –≤–∏—Ö–æ–¥—É üôè : ");
                String text = Const.s.nextLine();

                if (text.isEmpty()) {
                    System.out.println("Bye... üéÖ ");
                    return;
                }

                Const.datentime = LocalDateTime.parse(text, Const.fr);
                break;
            } catch (DateTimeException e) {
                System.out.println("–ü–æ–º–∏–≤–∫–∞ üò°ü§¨ : " + e.getMessage());
            }
        }

        String notate = "";
        System.out.println("–í–≤–µ–¥—ñ—Ç—å –∑–º—ñ—Å—Ç –∑–∞–ø–∏—Å—É(–¥–ª—è –≤–∏—Ö–æ–¥—É –Ω–∞–ø–∏—à—ñ—Ç—å : '1234567890098765432112345678900987654321qwertyuioplkjhgfdsazxcvbnmmnbvcxzasdfghjklpoiuytrewq') : ");
        while (true) {
            String line = Const.s.nextLine();
            if (line.equals("1234567890098765432112345678900987654321qwertyuioplkjhgfdsazxcvbnmmnbvcxzasdfghjklpoiuytrewq")) {
                break;
            } else if (notate.isEmpty()) {
                notate += line;
            } else {
                notate += "\n" + line;
            }

        }

        for (int i = 0; i < Const.SIZE; i++) {
            if (Const.data[i] == null) {
                Const.data[i] = Const.datentime;
                Const.notates[i] = notate;
                System.out.println("–ó–∞–ø–∏—Å –¥–æ–¥–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ ü§ó ");
                return;
            }
        }

        System.out.println("–©–æ–¥–µ–Ω–Ω–∏–∫ –∑–∞–ø–æ–≤–Ω–µ–Ω–∏–π ü•µ ");
    }

    public static void deleteNotate() {
        while (true) {
            try {
                System.out.println("–í–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É —Ç–∞ —á–∞—Å —É –≤–∞—à–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ üòè : ");
                String dateTimeInput = Const.s.nextLine();

                Const.datentime = LocalDateTime.parse(dateTimeInput, Const.fr);
                break;

            } catch (DateTimeException e) {
                System.out.println("–ü–æ–º–∏–≤–∫–∞ üò°ü§¨: " + e.getMessage());
            }
        }

        for (int i = 0; i < Const.SIZE; i++) {
            if (Const.datentime.equals(Const.data[i])) {
                Const.data[i] = null;
                Const.notates[i] = null;
                System.out.println("–ó–∞–ø–∏—Å –≤–∏–¥–∞–ª–µ–Ω–æ.ü§© ");
                return;
            }
        }

        System.out.println("–ó–∞–ø–∏—Å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. ");
    }

    public static void printNotates() {
        for (int i = 0; i < Const.SIZE; i++) {
            if (Const.data[i] != null) {
                System.out.println(Const.data[i].format(Const.fr));
                System.out.println(Const.notates[i]);
                System.out.println();
            }
        }
    }
}
